import type { NextPage, GetStaticProps, GetStaticPaths } from "next";
import Head from "next/head";
import { api } from "~/utils/api";
import { PageLayout } from "~/components/Layout";
import { generateSSGHelper } from "~/server/utils/ssgHelper";
import PostView from "~/components/PostView";

const PostPage: NextPage<{ id: string }> = ({ id }) => {
  const { data } = api.posts.getById.useQuery({
    id: id,
  });

  if (!data) return <div>Something went wrong</div>;
  return (
    <>
      <Head>
        <title>{`${data.post.content} - @${data.author.username}`}</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <PageLayout>
        <PostView {...data} />
      </PageLayout>
    </>
  );
};

export default PostPage;

export const getStaticProps: GetStaticProps = async (ctx) => {
  const helpers = generateSSGHelper();

  const id = ctx.params?.id;

  if (typeof id !== "string") throw new Error("id not found");

  await helpers.posts.getById.prefetch({ id: id });

  return {
    props: {
      trpcState: helpers.dehydrate(),
      id,
    },
  };
};

export const getStaticPaths: GetStaticPaths = () => {
  return { paths: [], fallback: "blocking" };
};
